/*
 * Copyright Â© 2016 Cask Data, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

@import "../../styles/variables.scss";

/* Animation - Slide in direction of Next */
.entity-animation--next-enter {
  &:not(h3) {
    transform: translate(500%, 0);
    opacity: 0.1;
    &.entity-animation--next-enter-active {
      transform: translate(0, 0);
      opacity: 1;
      transition: transform 1000ms, opacity 1000ms;
    }
  }
}

.entity-animation--next-appear {
  &:not(h3) {
    &.animation--next-appear-active {
      opacity: 1;
      transition: opacity 1000ms ease-in;
    }
  }
}

.entity-animation--next-leave {
  opacity: 0;
  &.entity-animation--next-leave-active {
    transition: opacity 1000ms ease-in;
  }
}

/* Animation - Slide in direction of Prev */
.entity-animation--prev-enter {
  &:not(h3) {
    transform: translate(-500%, 0);
    opacity: 0.1;
    &.entity-animation--prev-enter-active {
      transform: translate(0, 0);
      transition: transform 1000ms, opacity 1000ms;
      opacity: 1;
    }
  }
}

.entity-animation--prev-appear {
  &:not(h3) {
    opacity: 0;
    &.animation--prev-appear-active {
      opacity: 1;
      transition: opacity 1000ms ease-in;
    }
  }
}

.entity-animation--prev-leave {
  opacity: 0;
  &.entity-animation--prev-leave-active {
    transition: opacity 1000ms ease-in;
  }
}

.entity-list-view {
  height: calc(100vh - 132px);
  align-items: flex-start;

  .entities-container {
    display: flex;
    flex-wrap: wrap;
    padding: 10px 0px 0 5px;

    .transition-container {
      display: inline-flex;
      flex-wrap: wrap;
      height: 100%;
      flex: 1;
    }

    .home-list-view-container {
      display: inline-flex;
      flex-wrap: wrap;
      height: 100%;
      flex: 1;
      // FIXME: For later use.
      // transition: 1s ease-in width, 1s ease-in flex;

      /*
        width of each card = 100% - (padding of parent) - (combined margin of all cards in the row)
        margin for each card is 5px (as mentioned above).
        So the combined margin for all cards in say ,
          4 column layout : 5px + (5px + 5px) + (5px + 5px) + 5px = (3 * 10px)
          5 column layout : 5px + (5px + 5px) + (5px + 5px) + (5px + 5px) + 5px = (4 * 10px)
          6 column layout : 5px + (5px + 5px) + (5px + 5px) + (5px + 5px) + (5px + 5px) + 5px = (5 * 10px)
          n column layout : (n-1 * 10px);
      */

      @media (min-width: 1701px) {
        .entity-cards {
          width: calc((100% - 20px - 10px - (6 * 10px)) / 7);
        }
      }

      @media (min-width: 1601px) and (max-width: 1700px) {
        .entity-cards {
          width: calc((100% - 20px - 10px - (5 * 10px)) / 6);
        }
      }

      @media (min-width: 1201px) and (max-width: 1600px) {
        .entity-cards {
          width: calc((100% - 20px - 10px - (4 * 10px)) / 5);
        }
      }

      @media (min-width: 993px) and (max-width: 1200px) {
        .entity-cards {
          width: calc((100% - 20px - 10px - (3 * 10px)) / 4);
        }
      }

      @media(min-width: 768px) and (max-width: 992px) {
        .entity-cards {
          width: calc((100% - 20px - 10px - (2 * 10px)) / 3);
        }
      }
      &.show-overview-main-container {
        flex: 1 1;

        /*
          width of each card = 100% - (padding of parent) - (combined margin of all cards in the row)
          margin for each card is 5px (as mentioned above).
          So the combined margin for all cards in say ,
            4 column layout : 5px + (5px + 5px) + (5px + 5px) + 5px = (3 * 10px)
            5 column layout : 5px + (5px + 5px) + (5px + 5px) + (5px + 5px) + 5px = (4 * 10px)
            6 column layout : 5px + (5px + 5px) + (5px + 5px) + (5px + 5px) + (5px + 5px) + 5px = (5 * 10px)
            n column layout : (n-1 * 10px);
        */

        @media(min-width: 2001px) {
          .entity-cards {
            width: calc((100% - 20px - 10px - (5 * 10px)) / 6);
          }
        }

        @media (min-width: 1801px) and (max-width: 2000px) {
          .entity-cards {
            width: calc((100% - 20px - 10px - (4 * 10px)) / 5);
          }
        }

        @media (min-width: 1601px) and (max-width: 1800px) {
          .entity-cards {
            width: calc((100% - 20px - 10px - (3 * 10px)) / 4);
          }
        }

        @media (min-width: 1401px) and (max-width: 1600px) {
          .entity-cards {
            width: calc((100% - 20px - 10px - (2 * 10px)) / 3);
          }
        }

        @media (min-width: 1100px) and (max-width: 1400px) {
          .entity-cards {
            width: calc((100% - 20px - 10px - 10px) / 2);
          }
        }

        @media (max-width: 1099px) {
          .entity-cards {
            width: calc(100% - 20px - 10px);
          }
        }

      }
    }
    .entity-cards {
      &.active {
        .cask-card {
          .card-header {
            .entity-card-header {
              border-right: 0;
              border-left: 0;
              border-top: 0;
            }
          }
          .card-body {
            border-bottom: 0;
          }
        }
      }
    }

  }
  .loading-spinner {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: gray;
  }
  .empty-message {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 20px;
    font-weight: 500;

    &.text-danger {
      .fa-exclamation-triangle {
        margin-right: 5px;
      }
    }
  }
  .retry-now { margin-top: 10px; }
}
